 {- Зад. 1. Да се дефинира функция countDigits, която 
  генерира линейно рекурсивен процес и намира броя на цифрите на дадено естествено число.
-} countDigits :: Int -> Int countDigits _ = undefined {- Зад. 2. Да се дефинира функция 
  sumDigits, която генерира линейно рекурсивен процес и намира сумата от цифрите на дадено 
  естествено число.
-} sumDigits :: Int -> Int sumDigits _ = undefined {- Зад. 3. Да се дефинира функция pow, 
  която генерира линейно рекурсивен процес и намира x на степен n, където x е реално, а n - 
  естествено число.
-} pow :: Double -> Int -> Double pow x n = undefined {- Зад. 4. Да се дефинира функция 
  sumDigitsIterative, която генерира линейно итеративен процес и намира сумата от цифрите на 
  дадено естествено число.
-} sumDigitsIterative :: Int -> Int sumDigitsIterative _ = undefined {- Зад. 5. Да се дефинира 
  функция reverseNumber, която генерира линейно итеративен процес и по дадено естествено число 
  n намира числото, записано със същите цифри, но в обратен ред.
-} reverseNumber :: Int -> Int reverseNumber _ = undefined {- Зад. 6. Да се дефинира предикат 
  isPrime, който проверява дали дадено естествено число е просто. Забележка: Числото 1 не е 
  нито просто, нито съставно.
-} isPrime :: Int -> Bool isPrime _ = undefined {- Зад. 7. Да се напише предикат isAscending, 
  който връща истина, ако цифрите на дадено естествено число са в нарастващ ред от първата към 
  последната.
-} isAscending :: Int -> Bool isAscending _ = undefined {- Зад. 8. Да се напише функция 
  countOccurences, намираща броя на срещанията на дадена цифра d в записа на число n.
-} countOccurences :: Int -> Int -> Int countOccurences d n = undefined {- Зад. 9. Да се 
  напише предикат isPerfectNumber, който връща дали едно число е съвършено, т.е. равно на 
  сумата от делите си.
-} isPerfectNumber :: Int -> Bool isPerfectNumber _ = undefined {- Зад. 10. Да се дефинира 
  функция sumPrimeDivisors, която намира сумата на всички прости делители на едно число.
-} sumPrimeDivisors :: Int -> Int sumPrimeDivisors _ = undefined
